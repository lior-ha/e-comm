{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collection-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","CollectionPreview","title","items","toUpperCase","filter","item","idx","map","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","className","otherCollectionProps","isLoading","selectIsCollectionFetching","CollectionsOverviewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","imageUrl","style","backgroundImage","inverted","onClick"],"mappings":"u6BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAY1BC,EAAiBF,IAAOG,GAAV,KAUdC,EAAmBJ,IAAOC,IAAV,KCLdI,EAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACtB,eAACR,EAAD,WACI,cAACG,EAAD,UAAiBI,EAAME,gBACvB,cAACJ,EAAD,UAEQG,EACKE,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACF,GAAD,OACD,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKG,aCM5CC,G,OAAkBC,YAAyB,CAC7CC,YAAaC,OAGFC,cAAQJ,EAARI,EAZY,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACvB,qBAAKG,UAAU,sBAAf,SACKH,EAAYJ,KAAI,gBAAGC,EAAH,EAAGA,GAAOO,EAAV,6BACT,cAAC,EAAD,eAAgCA,GAARP,WCLlCC,EAAkBC,YAAyB,CAC7CM,UAAWC,MAKTC,EAA+BC,YACjCN,YAAQJ,GACRW,IAFiCD,CAGnCE,GAEaH,a,gCCnBf,oJAEMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKb,eAGJC,EAA8Bc,YACvC,CAACD,IACD,SAAAd,GAAW,OAAIA,EAAcgB,OAAOC,KAAKjB,GAAaJ,KAAI,SAAAsB,GAAG,OAAIlB,EAAYkB,MAAQ,MAG5EC,EAAmB,SAAAC,GAAkB,OAAIL,YAClD,CAACD,IACD,SAAAd,GAAW,OAAIA,EAAcA,EAAYoB,GAAsB,SAGtDd,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKQ,cAGJC,EAA4BP,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKb,gB,kECFJS,IAhBK,SAAAc,GAAgB,OAAI,gBAAGlB,EAAH,EAAGA,UAAcmB,EAAjB,oCACpCnB,EAAa,cAAC,IAAD,IAAgB,cAACkB,EAAD,eAAsBC,O,2kDCNhD,IAAMC,EAA0BzC,IAAOC,IAAV,KAiCvByC,EAAY1C,YAAO2C,IAAP3C,CAAH,KAgBT4C,EAAkB5C,IAAOC,IAAV,KAQf4C,EAA4B7C,IAAOC,IAAV,KAQzB6C,EAAgB9C,IAAO+C,KAAV,KAKbC,EAAiBhD,IAAO+C,KAAV,KC9CZ7B,gBAAQ,MAJI,SAAA+B,GAAQ,MAAK,CACpCC,QAAS,SAAAxC,GAAI,OAAIuC,EAASC,YAAQxC,QAGvBQ,EApBQ,SAAC,GAAuB,IAArBR,EAAoB,EAApBA,KAAMwC,EAAc,EAAdA,QACpBC,EAA0BzC,EAA1ByC,KAAMC,EAAoB1C,EAApB0C,MAAOC,EAAa3C,EAAb2C,SACrB,OACI,eAACZ,EAAD,WACI,cAACG,EAAD,CAAiBU,MAAO,CAAEC,gBAAgB,OAAD,OAASF,EAAT,QAEzC,eAACR,EAAD,WACI,cAACC,EAAD,UAAgBK,IAChB,eAACH,EAAD,eAAkBI,QAGtB,cAACV,EAAD,CAAWc,UAAQ,EAACC,QAAS,WAAOP,EAAQxC,IAA5C","file":"static/js/4.5f0a538b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n    margin-bottom: 30px;\r\n    \r\n    @media screen and (max-width: 800px) {\r\n        align-items: center;\r\n\r\n    }\r\n        \r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n    font-size: 28px;\r\n    margin-bottom: 25px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: gray;\r\n    }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 15px;\r\n    }        \r\n`\r\n","import CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport { CollectionPreviewContainer, TitleContainer, PreviewContainer } from './collection-preview.styles.jsx';\r\n\r\nconst CollectionPreview = ({ title, items }) => (\r\n    <CollectionPreviewContainer>\r\n        <TitleContainer>{title.toUpperCase()}</TitleContainer>\r\n        <PreviewContainer>\r\n            {\r\n                items\r\n                    .filter((item, idx) => idx < 4)\r\n                    .map((item) => (\r\n                        <CollectionItem key={item.id} item={item} />\r\n                    ))\r\n            }\r\n        </PreviewContainer>\r\n    </CollectionPreviewContainer>\r\n)\r\n\r\nexport default CollectionPreview;","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors.js'\r\n\r\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\r\n\r\n\r\nimport './collections-overview.styles.scss';\r\n\r\nconst CollectionOverview = ({ collections }) => (\r\n    <div className=\"collection-overview\">\r\n        {collections.map(({ id, ...otherCollectionProps}) => (\r\n                <CollectionPreview key={id} {...otherCollectionProps} />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n})\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionFetching // WithSpinner is expecting isLoading\r\n});\r\n\r\n// const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\r\n// more readable, especially if there are more HOCs\r\nconst CollectionsOverviewContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionsOverview); \r\n\r\nexport default CollectionsOverviewContainer;","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);","import Spinner from '../spinner/spinner.component';\r\n\r\n// WithSpinner helps with async data before we initialize the components using Higher Order Component\r\n// (HOC), which is a component that wrappes a component and returning other components, to extend\r\n// or reuse functionallity\r\n\r\n\r\n// HOC - Higher Order Component\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => (\r\n    isLoading ? (<Spinner />) : (<WrappedComponent {...otherProps} />)\r\n)\r\n\r\n\r\n// Can also be written like this:\r\n// const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n//     return isLoading ? (\r\n//         <SpinnerOverlay>\r\n//             <SpinnerContainer />\r\n//         </SpinnerOverlay>\r\n//     ) : (\r\n//         <WrappedComponent {...otherProps} />\r\n//     )\r\n// }\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 350px;\r\n\talign-items: center;\r\n    position: relative;\r\n    \r\n\r\n    &:hover {\r\n\t\t.image {\r\n\t\t\topacity: 0.8;\r\n\t\t}\r\n\t\tbutton {\r\n\t\t\topacity: 0.85;\r\n\t\t\tdisplay: flex;\r\n\t\t}\r\n    }\r\n    \r\n    @media screen and (max-width: 800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image {\r\n                opacity: unset;\r\n            }\r\n            button {\r\n                opacity: unset;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n    width: 80%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top: 255px;\r\n    display: none;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        display: block;\r\n        opacity: 0.9;\r\n        min-width: unset;\r\n        padding: 0 10px;\r\n        \r\n    }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 80%;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport const PriceContainer = styled.span`\r\n    width: 20%;\r\n    text-align: right;\r\n`","import { connect } from 'react-redux';\r\n\r\n\r\nimport { addItem } from '../../redux/cart/cart.action';\r\n\r\nimport {CollectionItemContainer, CollectionFooterContainer, AddButton, BackgroundImage, NameContainer, PriceContainer} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item;\r\n    return (\r\n        <CollectionItemContainer>\r\n            <BackgroundImage style={{ backgroundImage: `URL(${imageUrl})` }} />\r\n            \r\n            <CollectionFooterContainer>\r\n                <NameContainer>{name}</NameContainer>\r\n                <PriceContainer>${price}</PriceContainer>\r\n            </CollectionFooterContainer>\r\n\r\n            <AddButton inverted onClick={() => {addItem(item)}}> Add to cart </AddButton>\r\n        </CollectionItemContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}