{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","className","map","item","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","imageUrl","style","backgroundImage","inverted","onClick"],"mappings":"orBAEO,IAAMA,E,MAA0BC,EAAOC,IAAV,KC0BrBC,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGtDD,EAnBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACdK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACI,eAACZ,EAAD,WACI,oBAAIa,UAAU,QAAd,SAAuBF,IACvB,qBAAKE,UAAU,QAAf,SACKD,EAAME,KAAI,SAAAC,GAAI,OACP,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKC,eCR5CC,EAAkBC,YAAyB,CAC7CC,UAAW,SAACf,GAAD,OAAYgB,YAA0BhB,MAG/CJ,EAA0BqB,YAC5BlB,YAAQc,GACRK,IAF4BD,CAG9BE,GAEavB,a,gCCjBf,oJAEMwB,EAAa,SAAApB,GAAK,OAAIA,EAAMqB,MAErBC,EAAoBC,YAC7B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAad,KAAI,SAAAkB,GAAG,OAAIJ,EAAYI,MAAQ,MAG5EzB,EAAmB,SAAA0B,GAAkB,OAAIN,YAClD,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYK,GAAsB,SAGtDC,EAA6BP,YACtC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKU,cAGJf,EAA4BO,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,kECFJN,IAhBK,SAAAc,GAAgB,OAAI,gBAAGjB,EAAH,EAAGA,UAAckB,EAAjB,oCACpClB,EAAa,cAAC,IAAD,IAAgB,cAACiB,EAAD,eAAsBC,O,2kDCNhD,IAAMC,EAA0BrC,IAAOC,IAAV,KAiCvBqC,EAAYtC,YAAOuC,IAAPvC,CAAH,KAgBTwC,EAAkBxC,IAAOC,IAAV,KAQfwC,EAA4BzC,IAAOC,IAAV,KAQzByC,EAAgB1C,IAAO2C,KAAV,KAKbC,EAAiB5C,IAAO2C,KAAV,KC9CZzC,gBAAQ,MAJI,SAAA2C,GAAQ,MAAK,CACpCC,QAAS,SAAAhC,GAAI,OAAI+B,EAASC,YAAQhC,QAGvBZ,EApBQ,SAAC,GAAuB,IAArBY,EAAoB,EAApBA,KAAMgC,EAAc,EAAdA,QACpBC,EAA0BjC,EAA1BiC,KAAMC,EAAoBlC,EAApBkC,MAAOC,EAAanC,EAAbmC,SACrB,OACI,eAACZ,EAAD,WACI,cAACG,EAAD,CAAiBU,MAAO,CAAEC,gBAAgB,OAAD,OAASF,EAAT,QAEzC,eAACR,EAAD,WACI,cAACC,EAAD,UAAgBK,IAChB,eAACH,EAAD,eAAkBI,QAGtB,cAACV,EAAD,CAAWc,UAAQ,EAACC,QAAS,WAAOP,EAAQhC,IAA5C","file":"static/js/5.e7835202.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n\tdisplay: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n\t.title {\r\n\t\tfont-size: 38px;\r\n\t\tmargin: 0 auto 30px;\r\n\t}\r\n\r\n\t.items {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr 1fr 1fr;\r\n\t\tgrid-gap: 10px;\r\n\r\n        @media screen and (max-width: 800px) {\r\n            grid-template-columns: 1fr 1fr;\r\n            grid-gap: 15px;\r\n        }\r\n\r\n\t\t& .collection-item {\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t}\r\n\t}\r\n`","import { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\n\r\nimport { CollectionPageContainer } from './collection.styles.jsx';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n    const { title, items } = collection;\r\n    return (\r\n        <CollectionPageContainer>\r\n            <h2 className=\"title\">{title}</h2>\r\n            <div className=\"items\">\r\n                {items.map(item => (\r\n                        <CollectionItem key={item.id} item={item} />\r\n                    )\r\n                )}\r\n        </div>\r\n    </CollectionPageContainer>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: (state) => !selectIsCollectionsLoaded(state) // WithSpinner is expecting isLoading\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);","import Spinner from '../spinner/spinner.component';\r\n\r\n// WithSpinner helps with async data before we initialize the components using Higher Order Component\r\n// (HOC), which is a component that wrappes a component and returning other components, to extend\r\n// or reuse functionallity\r\n\r\n\r\n// HOC - Higher Order Component\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => (\r\n    isLoading ? (<Spinner />) : (<WrappedComponent {...otherProps} />)\r\n)\r\n\r\n\r\n// Can also be written like this:\r\n// const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n//     return isLoading ? (\r\n//         <SpinnerOverlay>\r\n//             <SpinnerContainer />\r\n//         </SpinnerOverlay>\r\n//     ) : (\r\n//         <WrappedComponent {...otherProps} />\r\n//     )\r\n// }\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 350px;\r\n\talign-items: center;\r\n    position: relative;\r\n    \r\n\r\n    &:hover {\r\n\t\t.image {\r\n\t\t\topacity: 0.8;\r\n\t\t}\r\n\t\tbutton {\r\n\t\t\topacity: 0.85;\r\n\t\t\tdisplay: flex;\r\n\t\t}\r\n    }\r\n    \r\n    @media screen and (max-width: 800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image {\r\n                opacity: unset;\r\n            }\r\n            button {\r\n                opacity: unset;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n    width: 80%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top: 255px;\r\n    display: none;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        display: block;\r\n        opacity: 0.9;\r\n        min-width: unset;\r\n        padding: 0 10px;\r\n        \r\n    }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 80%;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport const PriceContainer = styled.span`\r\n    width: 20%;\r\n    text-align: right;\r\n`","import { connect } from 'react-redux';\r\n\r\n\r\nimport { addItem } from '../../redux/cart/cart.action';\r\n\r\nimport {CollectionItemContainer, CollectionFooterContainer, AddButton, BackgroundImage, NameContainer, PriceContainer} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item;\r\n    return (\r\n        <CollectionItemContainer>\r\n            <BackgroundImage style={{ backgroundImage: `URL(${imageUrl})` }} />\r\n            \r\n            <CollectionFooterContainer>\r\n                <NameContainer>{name}</NameContainer>\r\n                <PriceContainer>${price}</PriceContainer>\r\n            </CollectionFooterContainer>\r\n\r\n            <AddButton inverted onClick={() => {addItem(item)}}> Add to cart </AddButton>\r\n        </CollectionItemContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}