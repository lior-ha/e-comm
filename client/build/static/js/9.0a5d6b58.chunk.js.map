{"version":3,"sources":["components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TitleContainer","span","PriceContainer","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","StripteCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","CartItemsContainer","CartTotalContainer","TestWarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"i+CAEO,IAAMA,EAAwBC,IAAOC,IAAV,KAUrBC,EAAiBF,IAAOC,IAAV,KAadE,EAAiBH,IAAOI,KAAV,KAOdC,EAAiBL,IAAOI,KAAV,KAQdE,EAAoBN,IAAOC,IAAV,KAkBjBM,EAAwBP,IAAOC,IAAV,KC5BnBO,cAAQ,MALI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAE7BH,EAxBa,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWI,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QACrDG,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAC9B,OACI,eAACpB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKkB,IAAKH,EAAUI,IAAKL,MAE7B,cAACb,EAAD,UAAiBa,IACjB,eAACV,EAAD,WACI,qBAAKgB,QAAS,kBAAMR,EAAWC,IAA/B,oBACA,+BAAOI,IACP,qBAAKG,QAAS,kBAAMT,EAAQE,IAA5B,uBAEJ,cAACV,EAAD,UAAiBa,IACjB,cAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,IAAhD,0B,oCCqBGQ,EAtCe,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACvBM,EAAyB,IAARN,EAqBvB,OACI,cAAC,IAAD,CACIO,MAAM,UACNT,KAAK,cACLU,gBAAc,EACdC,iBAAe,EACfC,MAAM,eACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,MA5BQ,SAAAA,GACZC,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQN,EACRQ,WAGPK,MAAM,SAAAC,GACHC,MAAM,yBAETC,OAAM,SAAAC,GACHC,QAAQC,IAAI,kBAAmBC,KAAKC,MAAMJ,IAC1CF,MAAM,sFAeNO,UA/Be,iH,2vCCHpB,IAAMC,EAAwB/C,IAAOC,IAAV,KAkBrB+C,EAA0BhD,IAAOC,IAAV,KAQvBgD,EAAuBjD,IAAOC,IAAV,KAiBpBiD,EAAqBlD,IAAOC,IAAV,KAIlBkD,EAAqBnD,IAAOC,IAAV,KAMlBmD,EAAuBpD,IAAOC,IAAV,KCR3BoD,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,MAGIlD,sBAAQ6C,EAAR7C,EA1CM,SAAC,GAAD,IAAG+C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACjB,eAACV,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UACI,6CAEJ,cAACA,EAAD,UACI,iDAEJ,cAACA,EAAD,UACI,8CAEJ,cAACA,EAAD,UACI,2CAEJ,cAACA,EAAD,UACI,+CAGR,cAACC,EAAD,UAEYK,EAAUI,KAAI,SAAA5C,GAAQ,OAClB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS6C,SAI5C,eAACT,EAAD,sBAA6BM,KAC7B,eAACL,EAAD,sEAEI,uBAFJ,kDAKA,cAAC,EAAD,CAAuBlC,MAAOuC","file":"static/js/9.0a5d6b58.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tmin-height: 100px;\r\n\tborder-bottom: 1px solid darkgrey;\r\n\tpadding: 15px 0;\r\n\tfont-size: 20px;\r\n    align-items: center;\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    width: 23%;\r\n    padding-right: 15px;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    @media screen and (max-width: 800px) {\r\n        width: 22%;\r\n    }\r\n`\r\n\r\nexport const TitleContainer = styled.span`\r\n    width: 23%;\r\n    @media screen and (max-width: 800px) {\r\n        width: 22%;\r\n    }\r\n`\r\n\r\nexport const PriceContainer = styled.span`\r\n    width: 23%;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        text-align: center;\r\n        width: 22%;\r\n    }\r\n`\r\nexport const QuantityContainer = styled.div`\r\n    width: 23%;\r\n    display: flex;\r\n    \r\n    @media screen and (max-width: 800px) {\r\n        width: 22%;\r\n        justify-content: center;\r\n    }\r\n\r\n    div {\r\n        cursor: pointer;\r\n    }\r\n\r\n    span {\r\n        margin: 0 10px;\r\n    }\r\n`\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n    padding-left: 12px;\r\n    cursor: pointer;\r\n    @media screen and (max-width: 800px) {\r\n        width: 12%;\r\n    }\r\n`","import { connect } from 'react-redux';\r\n\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.action';\r\n\r\nimport {CheckoutItemContainer, ImageContainer, TitleContainer, PriceContainer, QuantityContainer, RemoveButtonContainer} from './checkout-item.styles';\r\n\r\nexport const CheckoutItem = ({ cartItem, clearItem, removeItem, addItem }) => {\r\n    const {name, imageUrl, price, quantity} = cartItem;\r\n    return (\r\n        <CheckoutItemContainer>\r\n            <ImageContainer>\r\n                <img src={imageUrl} alt={name} />\r\n            </ImageContainer>\r\n            <TitleContainer>{name}</TitleContainer>\r\n            <QuantityContainer>\r\n                <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span>{quantity}</span>\r\n                <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </QuantityContainer>\r\n            <PriceContainer>{price}</PriceContainer>\r\n            <RemoveButtonContainer onClick={() => clearItem(cartItem)}>&#10005;</RemoveButtonContainer>\r\n        </CheckoutItemContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n})\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripteCheckoutButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51HqXZ1L1mfdRaEfVj9n1tTSQDwV10k7XpFkiPUIDGd6FkrtQosKHhhvtBp5VNuSQ27nSuqsV2SLG4yXQZ1wkfMUD00l82dLwwR';\r\n\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        })\r\n        .then (response => { \r\n            alert('Payment Successful');\r\n        })\r\n        .catch(error => {\r\n            console.log('Payment Error: ', JSON.parse(error));\r\n            alert('There was an issue with your payment. Please use the provided test credit card');\r\n        })\r\n\r\n    }\r\n    return (\r\n        <StripeCheckout \r\n            label='Pay Now'\r\n            name='MaShop Ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            image='/logo192.png'\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken} // On success callback\r\n            stripeKey={publishableKey}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StripteCheckoutButton;","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n\twidth: 55%;\r\n\tmin-height: 90vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n    margin: 50px auto 0;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        width: 100%;\r\n    }\r\n    \r\n    button {\r\n\t\tmargin-left: auto;\r\n\t\tmargin-top: 50px;\r\n\t}\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n    text-transform: capitalize;\r\n    width: 23%;\r\n\r\n    &:last-child {\r\n        width: 8%;\r\n    }\r\n\r\n    @media screen and (max-width: 800px) {\r\n        text-align: center;\r\n        width: 23%;\r\n        &:last-child {\r\n            width: 12%;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CartItemsContainer = styled.div`\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const CartTotalContainer = styled.div`\r\n    margin-top: 30px;\r\n    margin-left: auto;\r\n    font-size: 36px;\r\n`\r\n\t\r\nexport const TestWarningContainer = styled.div`\r\n    text-align: center;\r\n    margin-top: 40px;\r\n    font-size: 24px;\r\n    color: red;\r\n`\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors.js'\r\n\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport StripteCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\n\r\nimport {CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, CartItemsContainer, CartTotalContainer, TestWarningContainer} from './checkout.styles.jsx';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n    <CheckoutPageContainer>\r\n        <CheckoutHeaderContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Product</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Description</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Quantity</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Price</span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span>Remove</span>\r\n            </HeaderBlockContainer>\r\n        </CheckoutHeaderContainer>\r\n        <CartItemsContainer>\r\n            {\r\n                    cartItems.map(cartItem => \r\n                        <CheckoutItem key={cartItem.id} cartItem={cartItem}/>\r\n                    )\r\n            }\r\n        </CartItemsContainer>\r\n        <CartTotalContainer>TOTAL: ${total}</CartTotalContainer>\r\n        <TestWarningContainer>\r\n            *Please use the following test credit card for payment:*\r\n            <br />\r\n            4242-4242-4242-4242 - Exp: 01/21 -  CVV: 123\r\n        </TestWarningContainer>\r\n        <StripteCheckoutButton price={total} />\r\n    </CheckoutPageContainer>\r\n);\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n})\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}